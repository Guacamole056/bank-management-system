// Function to save accounts' data to the file

void saveAccountsToFile() {
  int i;
  FILE *file = fopen(ACCOUNT_FILENAME, "w"); // Open the file for writing
  if (file == NULL) {
    printf("Error opening account file for writing.\n");
    return;
  }

  // Write each account's data to the file, each field on a new line
  
  for (i = 0; i < accountCount; i++) {
    fprintf(file, "%d\n%s\n%f\n%d\n%s\n", accounts[i].accountNumber,
            accounts[i].name, accounts[i].balance, accounts[i].loyaltyPoints,
            accounts[i].ownerUsername);
  }

  fclose(file); // Close the file after writing
}

// Function to load accounts from a file into the system

void loadAccountsFromFile() {
  FILE *file = fopen(ACCOUNT_FILENAME, "r"); // Open the file for reading
  if (file == NULL) {
    printf("No existing account file found.\n");
    return;
  }

  int maxAccountNumber = 0;
  char line[256];

  while (!feof(file)) {
    Account tempAccount;

    // Read account number
    if (fgets(line, sizeof(line), file) == NULL)
      break;
    tempAccount.accountNumber = atoi(line);

    // Read name
    if (fgets(tempAccount.name, sizeof(tempAccount.name), file) == NULL)
      break;
    tempAccount.name[strcspn(tempAccount.name, "\n")] = '\0'; // Remove newline

    // Read balance
    if (fgets(line, sizeof(line), file) == NULL)
      break;
    tempAccount.balance = atof(line);

    // Read loyalty points
    if (fgets(line, sizeof(line), file) == NULL)
      break;
    tempAccount.loyaltyPoints = atoi(line);

    // Read owner username
    if (fgets(tempAccount.ownerUsername, sizeof(tempAccount.ownerUsername),
              file) == NULL)
      break;
    tempAccount.ownerUsername[strcspn(tempAccount.ownerUsername, "\n")] =
        '\0'; // Remove newline

    // Add the account to the array
    accounts[accountCount++] = tempAccount;

    // Update maxAccountNumber if necessary
    if (tempAccount.accountNumber > maxAccountNumber) {
      maxAccountNumber = tempAccount.accountNumber;
    }
  }

  fclose(file); // Close the file after reading

  // Update nextAccountNumber
  nextAccountNumber = maxAccountNumber + 1;
}
